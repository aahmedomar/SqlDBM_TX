- id: f0b6697a-7eb4-4925-9f72-ec5eb6318733
  value: |2-

      name: stage
              
      physicalName: 'stg_${parentPhysicalName}'           

      logicalName: '${parentLogicalName} dimension'
                                                 
      color: 'orange'                                             # Color of object on diagram (string, green | blue | red | SqlDBM  colors, optional)
      
      inheritIdentifiersAs: pk                                    # Inherit primary key columns from parent table(s) as PK or non-PK attributes (string, pk | non-pk | none, default non-pk)
      inheritAttributes: true                                     # Inherit non-pk columns from parent table(s) (boolean, default true)      
      
      defaultColumns:                                             
        - name: '__load_date'                            
          logicalName: 'load date'                     
          dataType: date
          comment: 'load date'                             
          nullable: false                                      
          unique: false                                        
          default: 'current_date()'                             
          position: last
          logic: current_date()

      nodeSettings:                                           
      - groupName: 'System UI Items'                          
        groupDesc: 'System UI Items'                          
        isEnabled: true                                                                            
      
        items:                                                                                               
        - itemType: materialization                              
          default: 'table'                                       
          options:                                               
          - 'table'  
          - 'view'     
          isRequired: true                                      
          isEnabled: true
        
        - itemType: prePostSql
          itemDesc: Pre Create SQL
          itemName: preCreate
          default: ''                                                 # Some default SQL text (string, optional)                              
          isRequired: false                                       
          isEnabled: true  
        
        - itemType: prePostSql
          itemDesc: Post Create SQL
          itemName: postCreate
          default: ''                                                 # Some default SQL text (string, optional)
          isRequired: false                                       
          isEnabled: true  
        
        - itemType: prePostSql
          itemDesc: Pre Run SQL
          itemName: preRun
          default: ''                                                 # Some default SQL text (string, optional)
          isRequired: false                                       
          isEnabled: true  
        
        - itemType: prePostSql
          itemDesc: Post Run SQL
          itemName: postRun
          default: ''                                                 # Some default SQL text (string, optional)
          isRequired: false                                       
          isEnabled: true  
                                                
      - groupName: 'Column settings' 
        groupDesc: 'Column settings'
        isEnabled: true
      
        items: 
        - itemType: columnSet                            
          itemName: PK
          itemDesc: 'Primary key'
          isRequired: false
          isEnabled: true
      
        - itemType: columnSet                            
          itemName: AK
          itemDesc: 'Alternate key'
          isRequired: false
          isEnabled: true
        
      - groupName: 'User UI Items'                            
        groupDesc: 'Optional user configured items'                            
        isEnabled: true
                                                                                                  
        items:           

        - itemType: toggleButton                              
          itemDesc: 'Rely on constraints'                               
          itemName: rely_button                                 
          default: true                                     
          isEnabled: true
  name: stage
  color: '#FC7917'
  createScript: |-
    {%- if materialization == 'table' %}
        CREATE OR REPLACE TABLE {{ location.databaseName }}.{{ location.schemaName }}.{{name}}
            (
                {% for col in columns -%}
                    {{ col.name }} {{ col.dataType }}          
                    {%- if not col.allowNulls %} NOT NULL
                        {%- if col.defaultValue | length > 0 %} DEFAULT {{ col.defaultValue }}{% endif %}
                    {%- endif %}
                    {%- if col.description | length > 0 %} COMMENT '{{ col.description }}'{% endif %}
                    {%- if not loop.last %}, {% endif %}
                {% endfor -%} 
                {% for colSet in columnSets %}
                    {%- if colSet.itemName == 'PK' -%}
                    , CONSTRAINT  {{ colSet.setName }} PRIMARY KEY (
                        {%- for pkCol in colSet.columns -%}
                            {{pkCol.name}}
                            {%- if not loop.last %}, {% endif -%}
                        {%- endfor -%}
                        )                         
                        {%- if rely_button %} RELY {% endif -%}
                    {%- endif -%}
                {%- endfor %}
                {% for colSet in columnSets %}
                    {%- if colSet.itemName == 'AK' -%}
                    , CONSTRAINT  {{ colSet.setName }} UNIQUE (
                        {%- for akCol in colSet.columns -%}
                            {{akCol.name}}
                            {%- if not loop.last %}, {% endif -%}
                        {%- endfor -%}
                        )                         
                        {%- if rely_button %} RELY {% endif -%}
                    {%- endif -%}
                {%- endfor %}        
            )
        {%- if description | length > 0 %} COMMENT = '{{ description }}'{% endif %}
        ;
        
        {%- elif materialization == 'view' %}
        CREATE OR REPLACE VIEW {{ location.mapping }}.{{name}}
        (
                {% for col in columns -%}
                    {{ col.name }}  
                    {%- if col.description | length > 0 %} COMMENT '{{ col.description }}'{% endif %}
                    {%- if not loop.last %}, {% endif %}
                {% endfor %}
            {%- if description | length > 0 %} COMMENT = '{{ description }}'{% endif %}
        )    
        AS
        {{logic}}
        ;
        {%- endif %}
  runScript: |-
    {% if materialization == 'table' %}
        INSERT INTO {{ location.mapping }}.{{name}}
        ( 
            {%- for col in columns %}
            {{ col.name }}
            {%- if not loop.last %}, {% endif %}
            {%- endfor %}
        )
        {{ logic }}
        ;
        
        {%- elif materialization == 'view' %}
        SELECT
            {%- for col in columns %}
            {{ col.name }}
            {%- if not loop.last %}, {% endif %}
            {%- endfor %}
        FROM {{ location.mapping }}.{{name}}    
        WHERE FALSE
        {%- endif %}
  isDefault: true
- id: 65867434-caca-479b-8534-b715431ed973
  value: "\r\n  name: fact\r\n          \r\n  physicalName: 'fct_${parentPhysicalName}'           \r\n\r\n  logicalName: '${parentLogicalName} dimension'\r\n                                             \r\n  color: 'green'                                             # Color of object on diagram (string, green | blue | red | SqlDBM  colors, optional)\r\n  \r\n  inheritIdentifiersAs: pk                                    # Inherit primary key columns from parent table(s) as PK or non-PK attributes (string, pk | non-pk | none, default non-pk)\r\n  inheritAttributes: true                                     # Inherit non-pk columns from parent table(s) (boolean, default true)      \r\n  \r\n  defaultColumns:                                             \r\n    - name: '__load_date'                            \r\n      logicalName: 'load date'                     \r\n      dataType: date\r\n      comment: 'load date'                             \r\n      nullable: false                                      \r\n      unique: false                                        \r\n      default: 'current_date()'                             \r\n      position: last\r\n      logic: current_date()\r\n\r\n  nodeSettings:                                           \r\n  - groupName: 'System UI Items'                          \r\n    groupDesc: 'System UI Items'                          \r\n    isEnabled: true                                                                            \r\n  \r\n    items:                                                                                               \r\n    - itemType: materialization                              \r\n      default: 'table'                                       \r\n      options:                                               \r\n      - 'table'  \r\n      - 'view'     \r\n      isRequired: true                                      \r\n      isEnabled: true\r\n    \r\n    - itemType: prePostSql\r\n      itemDesc: Pre Create SQL\r\n      itemName: preCreate\r\n      default: ''                                                 # Some default SQL text (string, optional)                              \r\n      isRequired: false                                       \r\n      isEnabled: true  \r\n    \r\n    - itemType: prePostSql\r\n      itemDesc: Post Create SQL\r\n      itemName: postCreate\r\n      default: ''                                                 # Some default SQL text (string, optional)\r\n      isRequired: false                                       \r\n      isEnabled: true  \r\n    \r\n    - itemType: prePostSql\r\n      itemDesc: Pre Run SQL\r\n      itemName: preRun\r\n      default: ''                                                 # Some default SQL text (string, optional)\r\n      isRequired: false                                       \r\n      isEnabled: true  \r\n    \r\n    - itemType: prePostSql\r\n      itemDesc: Post Run SQL\r\n      itemName: postRun\r\n      default: ''                                                 # Some default SQL text (string, optional)\r\n      isRequired: false                                       \r\n      isEnabled: true  \r\n                                            \r\n  - groupName: 'Column settings' \r\n    groupDesc: 'Column settings'\r\n    isEnabled: true\r\n  \r\n    items: \r\n    - itemType: columnSet                            \r\n      itemName: PK\r\n      itemDesc: 'Primary key'\r\n      isRequired: false\r\n      isEnabled: true\r\n  \r\n    - itemType: columnSet                            \r\n      itemName: AK\r\n      itemDesc: 'Alternate key'\r\n      isRequired: false\r\n      isEnabled: true\r\n    \r\n  - groupName: 'User UI Items'                            \r\n    groupDesc: 'Optional user configured items'                            \r\n    isEnabled: true\r\n                                                                                              \r\n    items:           \r\n\r\n    - itemType: toggleButton                              \r\n      itemDesc: 'Rely on constraints'                               \r\n      itemName: rely_button                                 \r\n      default: true                                     \r\n      isEnabled: true"
  name: fact
  color: '#1EC15F'
  createScript: "\r\n    {% if node.materializationType == 'table' %}\r\n        {{ stage('Create Fact Table') }}\r\n    \r\n        CREATE OR REPLACE TABLE {{ ref_no_link(node.location.name, node.name) }}\r\n        (\r\n            {% for col in columns %}\r\n                \"{{ col.name }}\" {{ col.dataType }}\r\n                {%- if not col.nullable %} NOT NULL\r\n                    {%- if col.defaultValue | length > 0 %} DEFAULT {{ col.defaultValue }}{% endif %}\r\n                {% endif %}\r\n                {%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}\r\n                {%- if not loop.last -%}, {% endif %}\r\n            {% endfor %}\r\n        )\r\n        {%- if node.description | length > 0 %} COMMENT = '{{ node.description | escape }}'{% endif %}\r\n    \r\n    \r\n    {% elif node.materializationType == 'view' %}\r\n        {{ stage('Create Fact View') }}\r\n    \r\n        CREATE OR REPLACE VIEW {{ ref_no_link(node.location.name, node.name) }}\r\n        (\r\n            {% for col in columns %}\r\n                \"{{ col.name }}\"\r\n                {%- if col.description | length > 0 %} COMMENT '{{ col.description | escape }}'{% endif %}\r\n                {%- if not loop.last -%},{% endif %}\r\n            {% endfor %}\r\n        )\r\n        {%- if node.description | length > 0 %} COMMENT = '{{ node.description | escape }}'{% endif %}\r\n        AS\r\n        {% for source in sources %}\r\n    \r\n            {% if loop.first %}SELECT {% endif %}\r\n    \r\n            {% for col in source.columns %}\r\n                {{ get_source_transform(col) }} AS \"{{ col.name }}\"\r\n                {%- if not loop.last -%}, {% endif %}\r\n            {% endfor %}\r\n            {{ source.join }}\r\n    \r\n            {% if not loop.last %} UNION ALL {% endif %}\r\n        {% endfor %}\r\n    \r\n    {% endif %}\r\n    "
  runScript: "\r\n    {% for test in node.tests if config.testsEnabled %}\r\n        {% if test.runOrder == 'Before' %}\r\n            {{ test_stage(test.name, test.continueOnFailure) }}\r\n            {{ test.templateString }}\r\n        {% endif %}\r\n    {% endfor %}\r\n\r\n    {% if node.materializationType == 'table' %}\r\n        {% if config.preSQL %}\r\n            {{ stage('Pre-SQL') }}\r\n            {{ config.preSQL }}\r\n        {% endif %}\r\n        \r\n        {% set has_business_key = columns | selectattr(\"isBusinessKey\") | list | length > 0 %}\r\n        \r\n        {% for source in sources %}\r\n        \r\n            {% if has_business_key %}\r\n        \r\n                {{ stage('MERGE ' + source.name | string ) }}\r\n                MERGE INTO {{ ref_no_link(node.location.name, node.name) }} \"TGT\"\r\n                USING (\r\n                    SELECT\r\n                    {% for col in source.columns %}\r\n                        {{ get_source_transform(col) }} AS \"{{ col.name }}\"\r\n                        {%- if not loop.last %}, {% endif %}\r\n                    {% endfor %}\r\n                    {{ source.join }})\r\n                    AS \"SRC\"\r\n                ON\r\n                {% for col in source.columns if col.isBusinessKey -%}\r\n                    {% if not loop.first %}\r\n                        AND\r\n                    {% endif %}\r\n                    \"SRC\".\"{{ col.name }}\" = \"TGT\".\"{{ col.name }}\"\r\n                {% endfor %}\r\n                WHEN MATCHED\r\n                {% for col in source.columns if not (   col.isBusinessKey or\r\n                                                        col.isSystemUpdateDate or\r\n                                                        col.isSystemCreateDate) %}\r\n                    {% if loop.first %}\r\n                        AND (\r\n                    {% else %}\r\n                        OR\r\n                    {% endif %}\r\n                    NVL( CAST(\"SRC\".\"{{ col.name }}\" as STRING), '**NULL**') <> NVL( CAST(\"TGT\".\"{{ col.name }}\" as STRING), '**NULL**')\r\n                    {% if loop.last %}\r\n                        )\r\n                    {% endif %}\r\n                {% endfor %}\r\n                THEN UPDATE SET\r\n                {%- for col in source.columns if not (col.isBusinessKey or col.isSystemCreateDate) %}\r\n                        \"TGT\".\"{{ col.name }}\" = \"SRC\".\"{{ col.name }}\"\r\n                    {% if not loop.last %}, {% endif %}\r\n                {% endfor %}\r\n                WHEN NOT MATCHED THEN\r\n                INSERT (\r\n                {%- for col in source.columns if not col.isSurrogateKey %}\r\n                    \"{{ col.name }}\"\r\n                    {% if not loop.last %}, {% endif %}\r\n                {% endfor -%}\r\n                )\r\n                VALUES (\r\n                {%- for col in source.columns if not col.isSurrogateKey %}\r\n                    \"SRC\".\"{{ col.name }}\"\r\n                    {% if not loop.last %}, {% endif %}\r\n                {% endfor -%}\r\n                )\r\n        \r\n            {% else %}\r\n        \r\n                {{ stage('Insert ' + source.name | string ) }}\r\n        \r\n                    INSERT INTO {{ ref_no_link(node.location.name, node.name) }}\r\n                    (\r\n                        {% for col in source.columns %}\r\n                            \"{{ col.name }}\"\r\n                            {%- if not loop.last -%},{% endif %}\r\n                        {% endfor %}\r\n                    )\r\n        \r\n                    SELECT\r\n                    {% for col in source.columns %}\r\n                        {{ get_source_transform(col) }} AS \"{{ col.name }}\"\r\n                        {%- if not loop.last -%}, {% endif %}\r\n                    {% endfor %}\r\n                    {{ source.join }}\r\n            {% endif %}\r\n        {% endfor %}\r\n        {% if config.postSQL %}\r\n            {{ stage('Post-SQL') }}\r\n            {{ config.postSQL }}\r\n        {% endif %}\r\n    {% endif %}\r\n\r\n    {% if config.testsEnabled %}\r\n        {% for test in node.tests %}\r\n            {% if test.runOrder == 'After' %}\r\n                {{ test_stage(test.name, test.continueOnFailure) }}\r\n                {{ test.templateString }}\r\n            {% endif %}\r\n        {% endfor %}\r\n\r\n        {% for column in columns %}\r\n            {% for test in column.tests %}\r\n                {{ test_stage(column.name + \": \" + test.name) }}\r\n                {{ test.templateString }}\r\n            {% endfor %}\r\n        {% endfor %}\r\n    {% endif %}\r\n    \r\n    "
  isDefault: false
