name: Generate SQL files and Run dbt Models

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

permissions:
  contents: write

env:
  DBT_PROJECT_NAME: athena
  DTB_AWS_ACCESS_KEY: ${{ secrets.DTB_AWS_ACCESS_KEY }}
  DTB_AWS_SECRET_ACCESS: ${{ secrets.DTB_AWS_SECRET_ACCESS }}
  DTB_PROFILE_DB: ${{ secrets.DTB_PROFILE_DB }}
  DTB_REGION_NAME: ${{ secrets.DTB_REGION_NAME }}
  DTB_PROFILE_SCHEMA: ${{ secrets.DTB_PROFILE_SCHEMA }}
  DTB_S3_DATA_DIR: ${{ secrets.DTB_S3_DATA_DIR }}
  DTB_S3_STAGING_DIR: ${{ secrets.DTB_S3_STAGING_DIR }}
  DBT_NUM_THREADS: 20
  DBT_QUERY_TAG: dbt_ci_pipe

jobs:
  generate-sql-and-run-dbt:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    
    - name: List repository contents
      run: |
        pwd
        ls -R
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools==65.5.0 wheel
        pip install PyYAML==6.0.1 dbt-core==1.5.0 dbt-athena-community==1.5.0
    
    - name: Run SQL generation script
      run: python adept/main.py

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add athena/models/*.sql
        git commit -m "Auto-generate SQL files" -a || echo "No changes to commit"
        git push https://${{ secrets.PAT }}@github.com/${{ github.repository }}.git
      env:
        PAT: ${{ secrets.PAT }}

    - name: Create .dbt directory and profiles.yml 
      run: |
        mkdir -p /home/runner/.dbt
        echo "
        ${{ env.DBT_PROJECT_NAME }}:
          outputs:
            dev:
              aws_access_key_id: ${{ env.DTB_AWS_ACCESS_KEY }}
              aws_secret_access_key: ${{ env.DTB_AWS_SECRET_ACCESS }}
              database: ${{ env.DTB_PROFILE_DB }}
              region_name: ${{ env.DTB_REGION_NAME }}
              s3_data_dir: ${{ env.DTB_S3_DATA_DIR }}
              s3_staging_dir: ${{ env.DTB_S3_STAGING_DIR }}
              schema: ${{ env.DTB_PROFILE_SCHEMA }}
              threads: ${{ env.DBT_NUM_THREADS }}
              type: athena
        " > /home/runner/.dbt/profiles.yml

    - name: Install dbt dependencies
      run: |
        python -m venv dbt_env
        source dbt_env/bin/activate
        cd athena
        dbt deps
    
    - name: Run dbt debug
      run: |
        source dbt_env/bin/activate
        cd athena
        dbt debug

    - name: Run dbt compile
      run: |
        source dbt_env/bin/activate
        cd athena
        dbt compile

    - name: Run dbt run
      run: |
        source dbt_env/bin/activate
        cd athena
        dbt run

    - name: Run dbt test
      run: |
        source dbt_env/bin/activate
        cd athena
        dbt test 

    - name: Run dbt clean
      run: |
        source dbt_env/bin/activate
        cd athena
        dbt clean
